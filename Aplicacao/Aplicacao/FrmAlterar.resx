<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QA2RXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAAEKgAAAAAAAAAAAP/iAhxJQ0NfUFJPRklMRQABAQAAAgxsY21zAhAAAG1udHJSR0IgWFlaIAfc
        AAEAGQADACkAOWFjc3BBUFBMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD21gABAAAAANMtbGNtcwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmRlc2MAAAD8AAAAXmNw
        cnQAAAFcAAAAC3d0cHQAAAFoAAAAFGJrcHQAAAF8AAAAFHJYWVoAAAGQAAAAFGdYWVoAAAGkAAAAFGJY
        WVoAAAG4AAAAFHJUUkMAAAHMAAAAQGdUUkMAAAHMAAAAQGJUUkMAAAHMAAAAQGRlc2MAAAAAAAAAA2My
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHRleHQAAAAARkIAAFhZWiAAAAAAAAD21gABAAAAANMtWFlaIAAA
        AAAAAAMWAAADMwAAAqRYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAA
        AAAAACSgAAAPhAAAts9jdXJ2AAAAAAAAABoAAADLAckDYwWSCGsL9hA/FVEbNCHxKZAyGDuSRgVRd13t
        a3B6BYmxmnysab9908PpMP///9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMPFB0aHx4dGhwcICQu
        JyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEcITIyMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgAhgCgAwEiAAIRAQMRAf/EAB8A
        AAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFB
        BhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldY
        WVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfI
        ycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYH
        CAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy
        0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz
        9PX29/j5+v/aAAwDAQACEQMRAD8A7mGUY5NWlm5FY0UwxVpJuRzXE3c77Gus2acz/Jms9JsnrUpl+U/S
        pY7E1xqEdlDI3mojtyN3Pb071n2evebarIVUsxcMYvug7jkdzxjH4dq5jxLd6rYXRubeRjbHDMwjVjG3
        TBJBwOh9Oa5BtR13xBfi3tbi4zkiR0+RVU9Q23AP0PWpSWxai3rc9ht9USdefVT+RrVE4Yxf9dCf0NcL
        azLYac00mfLiTgDqccAU6LxkAylbVyA2RlvbFCXYGkd1JIPsyoO8ZpqTs8bHcDuwQevSuIPjLcFX7Ex+
        QjmT/wCtVw3zqDdR6VDuUh9onG0HIOc42+p6/rVRRk0dTbE+Yo/2pP51NE+yMr6RJ+prh4fG8sch22A/
        j/5bev8AwGlbxrLjJsRkog/13of92qadhbncySFbheOsv/stZWp6rDBbHa5EghdMhScMf51inxWkwjJT
        Yd5YjOccVxmrXt9YzSTRyTPby/OWQkhSecEfng+lF+rGo3dj0Kx1sXlpH5xBlJQltu0EDn1OPx5+lWIb
        4rwGGMSEc+pry7R4NZ1bUI3jnu4bMHLvuZA+OcAZ5rvreJo48knO0frUuXkaezS6m3JGshIR8EmJR/M1
        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
</value>
  </data>
</root>